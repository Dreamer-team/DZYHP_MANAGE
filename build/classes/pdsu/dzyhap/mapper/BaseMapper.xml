<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pdsu.dzyhap.dao.BaseMapper" >
  <resultMap id="BaseResultMap" type="pdsu.dzyhap.bean.Base" >
    <id column="base_id" property="baseId" jdbcType="INTEGER" />
    <result column="base_name" property="baseName" jdbcType="VARCHAR" />
    <result column="base_type" property="baseType" jdbcType="VARCHAR" />
    <result column="found_src" property="foundSrc" jdbcType="VARCHAR" />
    <result column="found_budget" property="foundBudget" jdbcType="VARCHAR" />
    <result column="found_proj" property="foundProj" jdbcType="VARCHAR" />
    <result column="found_dept" property="foundDept" jdbcType="VARCHAR" />
    <result column="found_stat" property="foundStat" jdbcType="CHAR" />
    <result column="base_stat" property="baseStat" jdbcType="CHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  
   <resultMap type="pdsu.dzyhap.bean.Base" id="query">
        <id column="base_id" property="baseId" jdbcType="INTEGER" />
       <result column="base_name" property="baseName" jdbcType="VARCHAR" />
       <result column="base_type" property="baseType" jdbcType="VARCHAR" />   
       <result column="base_stat" property="baseStat" jdbcType="CHAR" />
       <result column="remark" property="remark" jdbcType="VARCHAR" />
       <association property="found_type" column="found_type_id" javaType="pdsu.dzyhap.bean.Found_type">
         <result property="foundType" column="found_type"/>
       </association>
       <association property="dept" column="dept_id" javaType="pdsu.dzyhap.bean.Dept">
         <result  column="dept_name" property="deptName"/>   
       </association>
       <association property="users" column="user_id " javaType="pdsu.dzyhap.bean.Users">
          <result  column="name"  property="name"/>
       </association>
  </resultMap>
  
  
  
  <resultMap type="pdsu.dzyhap.bean.Base" id="queryAll" extends="BaseResultMap">
      <association property="found_type" column="found_type_id" javaType="pdsu.dzyhap.bean.Found_type">
         <result property="foundType" column="found_type"/>
       </association>
       <association property="dept" column="dept_id" javaType="pdsu.dzyhap.bean.Dept">
         <id  column="dept_id" property="deptId"/>
         <result  column="dept_name" property="deptName"/>   
       </association>
       <association property="users" column="user_id " javaType="pdsu.dzyhap.bean.Users">
          <result  column="name"  property="name"/>
       </association>
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
   
    delete from base
    where base_id = #{baseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pdsu.dzyhap.bean.Base" >
   
    insert into base (base_id, base_name, base_type, 
      found_type_id, dept_id, user_id, 
      found_src, found_budget, found_proj, 
      found_dept, found_stat, base_stat, 
      remark)
    values (#{baseId,jdbcType=INTEGER}, #{baseName,jdbcType=VARCHAR}, #{baseType,jdbcType=VARCHAR}, 
      #{found_type.foundTypeId,jdbcType=INTEGER}, #{dept.deptId,jdbcType=INTEGER}, #{users.userId,jdbcType=VARCHAR}, 
      #{foundSrc,jdbcType=VARCHAR}, #{foundBudget,jdbcType=VARCHAR}, #{foundProj,jdbcType=VARCHAR}, 
      #{foundDept,jdbcType=VARCHAR}, #{foundStat,jdbcType=CHAR}, #{baseStat,jdbcType=CHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="pdsu.dzyhap.bean.Base" >
    update base
      <set>
         <if test=" baseName !=null &amp;&amp;  baseName!=''"> base_name = #{baseName,jdbcType=VARCHAR},</if>
         <if test=" baseType !=null &amp;&amp;  baseType!=''">base_type = #{baseType,jdbcType=VARCHAR},</if>
         <if test=" foundSrc !=null &amp;&amp;  foundSrc!=''">found_src = #{foundSrc,jdbcType=VARCHAR},</if>
         <if test=" foundBudget !=null &amp;&amp;  foundBudget!=''"> found_budget = #{foundBudget,jdbcType=VARCHAR},</if>
         <if test=" foundProj !=null &amp;&amp;   foundProj!=''"> found_proj = #{foundProj,jdbcType=VARCHAR},</if>
         <if test=" remark!=null &amp;&amp;  remark !=''">  remark = #{remark,jdbcType=VARCHAR},</if>
         <if test=" foundStat !=null &amp;&amp; foundStat !=''"> found_stat = #{foundStat,jdbcType=CHAR},</if>
         <if test=" baseStat  !=null &amp;&amp; baseStat !=''"> base_stat = #{baseStat,jdbcType=CHAR},</if>
         <if test=" found_type.foundTypeId !=null">  found_type_id = #{found_type.foundTypeId,jdbcType=INTEGER},</if>
         <if test=" dept.deptId !=null">   dept_id = #{dept.deptId,jdbcType=INTEGER},</if>
         <if test=" users.userId !=null">   user_id = #{users.userId,jdbcType=VARCHAR},</if>
       
      </set>
       where base_id = #{baseId,jdbcType=INTEGER}
  </update>
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
   
    select base_id, base_name, base_type, found_type_id, dept_id, user_id, found_src, 
    found_budget, found_proj, found_dept, found_stat, base_stat, remark
    from base
    where base_id = #{baseId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select base_id, base_name, base_type, found_type_id, dept_id, user_id, found_src, 
    found_budget, found_proj, found_dept, found_stat, base_stat, remark
    from base
  </select>
  
  
     <select id="query"  resultMap="query" >
     
        select  b.base_id as  base_id, b.base_name as base_name, b.base_type as base_type, 
        f.found_type as found_type, d.dept_name as dept_name, u.`name` as `name`
        ,b.base_stat as base_stat, b.remark as remark
         from base b 
         left join found_type f on b.found_type_id=f.found_type_id
         left join users u on b.user_id=u.user_id 
         LEFT JOIN  dept d on b.dept_id=d.dept_id
         
     </select>
  
     <select id="selectOne" resultMap="queryAll">
        select  
        b.base_id as  base_id,           b.base_name as base_name, 
        b.base_type as base_type,        b.found_src as found_src ,
        b.found_budget as found_budget,  b.found_proj as found_proj , 
        b.found_dept as found_dept,      b.found_stat  as found_stat,
        b.base_stat as base_stat,        b.remark as remark,        
        f.found_type as found_type,      d.dept_name as dept_name, 
        u.`name` as `name`,d.dept_id as dept_id
        from base b 
        left join found_type f on b.found_type_id=f.found_type_id
        left join users u on b.user_id=u.user_id 
        LEFT JOIN  dept d on b.dept_id=d.dept_id
        where base_id=#{baseId}
     </select>
  
  <select id="selectBybaseNameAndStat" resultMap="queryAll">
      select  
        b.base_id as  base_id,           b.base_name as base_name, 
        b.base_type as base_type,        b.found_src as found_src ,
        b.found_budget as found_budget,  b.found_proj as found_proj , 
        b.found_dept as found_dept,      b.found_stat  as found_stat,
        b.base_stat as base_stat,        b.remark as remark,        
        f.found_type as found_type,      d.dept_name as dept_name, 
        u.`name` as `name`,d.dept_id as dept_id
        from base b 
        left join found_type f on b.found_type_id=f.found_type_id
        left join users u on b.user_id=u.user_id 
        LEFT JOIN  dept d on b.dept_id=d.dept_id
        <where>
            <if test="stat!=null &amp;&amp; stat!='' &amp;&amp; stat > -1 ">
                base_stat=#{stat}
            </if>
            
            <if test="baseName !=null &amp;&amp; baseName !='' ">
             or   base_name like #{baseName}
            </if>
        </where>
  
  </select>
     
  
  
  
  
  
</mapper>