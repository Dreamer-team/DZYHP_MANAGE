<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">




  <!--spring配置文件,这里主要配置和业务逻辑有关的  -->
    <!-- 引入属性文件配置数据源 -->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <!-- 数据源配置,以及业务的配置 -->
     <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
     </bean>
     <!-- 扫描包 -->
     <context:component-scan base-package="pdsu.dzyhp.service"></context:component-scan>
     <!-- mybatis整合配置 -->
     <bean id="SessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
         <!-- 指定mabatis文件所在位置 -->
         <property name="configLocation" value="classpath:mybatis-config.xml"></property>
         <property name="dataSource" ref="pooledDataSource"></property>
         <!-- 指定mapper文件的位置,如果写mapper.xml的话,把这个properties开启 --> 
         <property name="mapperLocations" value="classpath:pdsu/dzyhp/mapper/*.xml"></property>
        
     </bean>
     
     <!-- 配置一个可以执行批量操作的sqlsession -->
     <bean id="SqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg  name="sqlSessionFactory" ref="SessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
     </bean>
     
     <!-- 配置扫描器,将mybatis接口的实现加入到ioc容器中 -->
    
     <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描所有的dao接口的实现加入到ioc容器中 -->
        <property name="basePackage" value="pdsu.dzyhp.dao"> </property> 
     </bean>
     <!-- 事务的配置 -->
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制数据源 -->
        <property name="dataSource" ref="pooledDataSource"></property>
     </bean>
     <!-- 开启基于注解的 事务,重要的配置事务-->
     <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
